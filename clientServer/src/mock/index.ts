import {
  ChatRoomType,
  CommentType,
  Country,
  MessageType,
  project,
  ProjectType,
  Role,
  TeamType,
  TicketType,
  UserType,
  WorkFlowListType,
} from "@/types";

export const mockRoles: Role[] = [
  { id: "r1", role: "admin", permissions: ["manage_users", "edit_projects"] },
  {
    id: "r2",
    role: "supervisor",
    permissions: ["view_reports", "manage_team"],
  },
  { id: "r3", role: "member", permissions: ["view_projects"] },
];

export const mockUsers: UserType[] = [
  {
    id: "67a35b4d278aa17859d83045",
    firstName: "John",
    lastName: "Doe",
    email: "john.doe@example.com",
    formattedPhoneNumber: "+7-1234567890",
    projects: {
      project: {
        id: "101",
        title: "Project Alpha",
        description: "First project",
        teams: [],
        projectOwner: {} as UserType,
        expectedDeadLine: new Date(),
        members: [],
        list: [],
      },
      role: {
        id: "301",
        role: "admin",
        permissions: ["manage_users", "edit_projects"],
      },
    },
    password: "securepassword",
    team: {} as TeamType,
    jobTitle: "Cloud Engineer",
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "u1",
    firstName: "John",
    lastName: "Doe",
    email: "john.doe@example.com",
    formattedPhoneNumber: "+7-1234567890",
    projects: {} as project,
    password: "securepassword",
    team: {} as TeamType,
    jobTitle: "Full Stack Developer",
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "u2",
    firstName: "Jane",
    lastName: "Smith",
    email: "jane.smith@example.com",
    formattedPhoneNumber: "9876543210",
    projects: {} as project,
    password: "anotherpassword",
    team: {} as TeamType,
    jobTitle: "UI/UX Developer",
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "2",
    firstName: "Jane",
    lastName: "Smith",
    email: "jane.smith@example.com",
    formattedPhoneNumber: "+1-9876543210",
    projects: {
      project: {
        id: "102",
        title: "Project Beta",
        description: "Second project",
        teams: [],
        projectOwner: {} as UserType,
        expectedDeadLine: new Date(),
        members: [],
        list: [],
      },
      role: {
        id: "302",
        role: "supervisor",
        permissions: ["view_reports", "manage_team"],
      },
    },
    password: "anotherpassword",
    team: {} as TeamType,
    jobTitle: "Cloud Engineer",
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "u3",
    firstName: "Bob",
    lastName: "Brown",
    email: "bob.brown@example.com",
    formattedPhoneNumber: "+1-5555555555",
    projects: {} as project,
    password: "password123",
    team: {} as TeamType,
    jobTitle: "API Developer",
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
];

export const mockComments: CommentType[] = [
  {
    id: "c3",
    description: "This feature is working well, but could be faster.",
    commenter: mockUsers[2],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "c4",
    description: "Please add a dark mode option.",
    commenter: mockUsers[3],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "c5",
    description: "Any update on the status of this bug?",
    commenter: mockUsers[4],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "c6",
    description: "The UI is much cleaner now, nice work!",
    commenter: mockUsers[0],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "c7",
    description: "Can you clarify the requirements for this task?",
    commenter: mockUsers[1],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "c1",
    description: "Great job on the latest update!",
    commenter: mockUsers[0],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "c2",
    description: "Can we add more tests to this?",
    commenter: mockUsers[1],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
];

export const mockTickets: TicketType[] = [
  {
    id: "tk1",
    title: "Fix Login Bug",
    description: "Users can't log in with old passwords.",
    status: {} as WorkFlowListType,
    author: mockUsers[0],
    assignee: mockUsers[1],
    expectedDeadLine: new Date(),
    comments: mockComments,
    updatedBy: mockUsers[0],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "tk2",
    title: "Refactor API Calls",
    description: "Improve API response times and caching.",
    status: {} as WorkFlowListType,
    author: mockUsers[2],
    assignee: mockUsers[0],
    expectedDeadLine: new Date(),
    comments: mockComments,
    updatedBy: mockUsers[2],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "tk3",
    title: "Update User Profile Picture Upload",
    description: "Enable users to upload profile pictures in high resolution.",
    status: {} as WorkFlowListType,
    author: mockUsers[2],
    assignee: mockUsers[3],
    expectedDeadLine: new Date(),
    comments: mockComments,
    updatedBy: mockUsers[2],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "tk4",
    title: "Implement User Authentication",
    description: "Integrate OAuth for third-party logins.",
    status: {} as WorkFlowListType,
    author: mockUsers[0],
    assignee: mockUsers[1],
    expectedDeadLine: new Date(),
    comments: mockComments,
    updatedBy: mockUsers[0],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "tk5",
    title: "Fix Mobile Layout Issues",
    description: "Resolve the layout issues on mobile view for dashboard.",
    status: {} as WorkFlowListType,
    author: mockUsers[3],
    assignee: mockUsers[4],
    expectedDeadLine: new Date(),
    comments: mockComments,
    updatedBy: mockUsers[3],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "tk6",
    title: "Update Documentation",
    description: "Ensure all new features are documented correctly.",
    status: {} as WorkFlowListType,
    author: mockUsers[1],
    assignee: mockUsers[0],
    expectedDeadLine: new Date(),
    comments: mockComments,
    updatedBy: mockUsers[1],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "tk7",
    title: "Fix Email Notification Bug",
    description:
      "Some users are not receiving email notifications for updates.",
    status: {} as WorkFlowListType,
    author: mockUsers[4],
    assignee: mockUsers[2],
    expectedDeadLine: new Date(),
    comments: mockComments,
    updatedBy: mockUsers[4],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
];

export const mockWorkFlowLists: WorkFlowListType[] = [
  {
    id: "wf3",
    title: "Ready for QA",
    project: {} as ProjectType,
    author: mockUsers[3],
    list: [mockTickets[2], mockTickets[3]],
    updatedBy: mockUsers[4],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "wf4",
    title: "Code Review",
    project: {} as ProjectType,
    author: mockUsers[1],
    list: [mockTickets[4], mockTickets[5]],
    updatedBy: mockUsers[0],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "wf5",
    title: "QA In Progress",
    project: {} as ProjectType,
    author: mockUsers[4],
    list: [mockTickets[6]],
    updatedBy: mockUsers[2],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "wf6",
    title: "Deployed",
    project: {} as ProjectType,
    author: mockUsers[0],
    list: mockTickets,
    updatedBy: mockUsers[1],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "wf7",
    title: "Backlog",
    project: {} as ProjectType,
    author: mockUsers[2],
    list: mockTickets,
    updatedBy: mockUsers[3],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "wf1",
    title: "To Do",
    project: {} as ProjectType,
    author: mockUsers[0],
    list: [mockTickets[1]],
    updatedBy: mockUsers[1],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "wf2",
    title: "In Progress",
    project: {} as ProjectType,
    author: mockUsers[2],
    list: [mockTickets[0]],
    updatedBy: mockUsers[0],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
];
export const mockTeams: TeamType[] = [
  {
    id: "t1",
    name: "Frontend Team",
    description: "Responsible for UI development",
    members: [mockUsers[0]],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "t2",
    name: "Backend Team",
    description: "Handles backend development",
    members: [mockUsers[1]],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
];

export const projects: ProjectType[] = [
  {
    id: "101",
    title: "Project Alpha",
    description: "A sample project for testing",
    teams: [mockTeams[0], mockTeams[1]],
    projectOwner: mockUsers[0],
    expectedDeadLine: new Date(),
    members: [
      {
        user: mockUsers[0],
        role: {
          id: "301",
          role: "admin",
          permissions: ["manage_users", "edit_projects"],
        },
      },
      {
        user: mockUsers[1],
        role: {
          id: "302",
          role: "supervisor",
          permissions: ["view_projects"],
        },
      },
    ],
    list: mockWorkFlowLists,
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "102",
    title: "Project Beta",
    description: "Another project for validation",
    teams: [mockTeams[1]], // Single team
    projectOwner: mockUsers[1],
    expectedDeadLine: new Date(),
    members: [
      {
        user: mockUsers[1],
        role: {
          id: "303",
          role: "member",
          permissions: ["view_projects"],
        },
      },
    ],
    list: [mockWorkFlowLists[0], mockWorkFlowLists[1]],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
];

export const mockMessages: MessageType[] = [
  {
    id: "501",
    content: "Hello, team!",
    sender: mockUsers[0],
    chatRoomId: projects[0],
    timestamp: new Date(),
    seenBy: mockUsers[1],
    teamId: "201",
    mentions: [mockUsers[1]],
    replies: [],
    deliveredTo: [mockUsers[1]],
    notifiedUsers: [mockUsers[1]],
    isDeleted: false,
    createdAt: new Date(),
    updatedAt: new Date(),
  },
];

export const mockChatRooms: ChatRoomType[] = [
  {
    chatRoomId: projects[0],
    messages: mockMessages,
    users: mockUsers,
  },
];

export const countries: Country[] = [
  { code: "US", dialCode: "+1", name: "United States" },
  { code: "JO", dialCode: "+962", name: "Jordan" },
  { code: "CA", dialCode: "+4", name: "Canada" },
  { code: "GB", dialCode: "+44", name: "United Kingdom" },
  { code: "IN", dialCode: "+91", name: "India" },
];

export const mockData = {
  users: mockUsers,
  Roles: [],
  teams: [],
  comments: [],
  Tickets: [],
  workFlowLists: [],
  projects,
  messages: mockMessages,
};
